[{"content":"https://leetcode-cn.com/problems/contains-duplicate-ii/\nclass Solution { public boolean containsNearbyDuplicate(int[] nums, int k) { HashMap\u0026lt;Integer, Integer\u0026gt; hashMap = new HashMap\u0026lt;\u0026gt;(); for(int i = 0; i \u0026lt; nums.length; i++) { int num = nums[i]; if(hashMap.containsKey(num)) { return true; } hashMap.put(num, null); if(hashMap.size() \u0026gt; k) { hashMap.remove(nums[i - k]); } } return false; } } ","permalink":"https://xiaotuanzijiang.github.io/posts/219/","summary":"https://leetcode-cn.com/problems/contains-duplicate-ii/\nclass Solution { public boolean containsNearbyDuplicate(int[] nums, int k) { HashMap\u0026lt;Integer, Integer\u0026gt; hashMap = new HashMap\u0026lt;\u0026gt;(); for(int i = 0; i \u0026lt; nums.length; i++) { int num = nums[i]; if(hashMap.containsKey(num)) { return true; } hashMap.put(num, null); if(hashMap.size() \u0026gt; k) { hashMap.remove(nums[i - k]); } } return false; } } ","title":"LeetCode-219.存在重复元素II"}]
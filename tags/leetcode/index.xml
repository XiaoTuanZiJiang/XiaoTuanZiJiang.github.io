<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LeetCode on XiaoTuanZiJiang</title>
    <link>https://xiaotuanzijiang.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on XiaoTuanZiJiang</description>
    <image>
      <url>https://xiaotuanzijiang.github.io/papermod-cover.png</url>
      <link>https://xiaotuanzijiang.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 30 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaotuanzijiang.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode</title>
      <link>https://xiaotuanzijiang.github.io/posts/leetcode/</link>
      <pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://xiaotuanzijiang.github.io/posts/leetcode/</guid>
      <description>LeetCode 8-1-1374. 生成每种字符都是奇数个的字符串 难度：简单
 模拟
 func generateTheString(n int) string { if n &amp;amp; 1 == 1 { return strings.Repeat(&amp;#34;a&amp;#34;, n) } return strings.Repeat(&amp;#34;a&amp;#34;, n-1) + &amp;#34;b&amp;#34; } 7-31-1161. 最大层内元素和 难度：中等
 二叉树层序遍历
 /** * Definition for a binary tree node. * type TreeNode struct { * Val int * Left *TreeNode * Right *TreeNode * } */ func maxLevelSum(root *TreeNode) int { ans, num, level, queue := 1, -int(1E9), 1, []*TreeNode{root} for len(queue) &amp;gt; 0 { size, sum := len(queue), 0 for i := 0; i &amp;lt; size; i++ { sum += queue[i].</description>
    </item>
    
  </channel>
</rss>

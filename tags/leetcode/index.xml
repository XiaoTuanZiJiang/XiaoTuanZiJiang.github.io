<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LeetCode on XiaoTuanZiJiang</title>
    <link>https://xiaotuanzijiang.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on XiaoTuanZiJiang</description>
    <image>
      <url>https://xiaotuanzijiang.github.io/papermod-cover.png</url>
      <link>https://xiaotuanzijiang.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 19 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaotuanzijiang.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode</title>
      <link>https://xiaotuanzijiang.github.io/posts/leetcode/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xiaotuanzijiang.github.io/posts/leetcode/</guid>
      <description>LeetCode_每日一题 5.21-961. 在长度 2N 的数组中找出重复 N 次的元素 难度：简单
 模拟
 func repeatedNTimes(nums []int) int { hash := map[int]int{} for _, num := range nums { if hash[num] == 1 { return num } hash[num]++ } return -1 } 3.28-693. 交替位二进制数 难度：简单
 模拟
 class Solution { public boolean hasAlternatingBits(int n) { while(n &amp;gt; 0){ if((n &amp;amp; 1) + (n &amp;gt;&amp;gt; 1 &amp;amp; 1) != 1) return false; n &amp;gt;&amp;gt;= 1; } return true; } }  位运算</description>
    </item>
    
  </channel>
</rss>

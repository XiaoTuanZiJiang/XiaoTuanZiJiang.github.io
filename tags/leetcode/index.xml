<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LeetCode on XiaoTuanZiJiang</title>
    <link>https://xiaotuanzijiang.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on XiaoTuanZiJiang</description>
    <image>
      <url>https://xiaotuanzijiang.github.io/papermod-cover.png</url>
      <link>https://xiaotuanzijiang.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 19 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaotuanzijiang.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode</title>
      <link>https://xiaotuanzijiang.github.io/posts/leetcode/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xiaotuanzijiang.github.io/posts/leetcode/</guid>
      <description>LeetCode_每日一题 2.20-717. 1比特与2比特字符 难度：简单
 模拟
 class Solution { public boolean isOneBitCharacter(int[] bits) { int n = bits.length, i = 0; while(i &amp;lt; n - 1){ if(bits[i] == 0) i++; else i += 2; } return i == n - 1; } } 2.18-791. 找出星型图的中心节点 难度：简单
 HashMap
 class Solution { public int findCenter (int[][] edges) { HashMap&amp;lt;Integer, Integer&amp;gt; hashMap = new HashMap&amp;lt;&amp;gt;(); int res = 0; for (int i = 0; i &amp;lt; 2; i++) { for (int j = 0; j &amp;lt; 2; j++) { if (hashMap.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LeetCode on XiaoTuanZiJiang</title>
    <link>https://xiaotuanzijiang.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on XiaoTuanZiJiang</description>
    <image>
      <url>https://xiaotuanzijiang.github.io/papermod-cover.png</url>
      <link>https://xiaotuanzijiang.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 19 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaotuanzijiang.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode</title>
      <link>https://xiaotuanzijiang.github.io/posts/leetcode/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xiaotuanzijiang.github.io/posts/leetcode/</guid>
      <description>LeetCode_每日一题 3.26-682. 棒球比赛 难度：简单
 模拟
 class Solution { public int calPoints(String[] ops) { List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(); for(String s : ops){ int size = list.size(); if(&amp;#34;C&amp;#34;.equals(s)){ list.remove(size - 1); } else if(&amp;#34;+&amp;#34;.equals(s)){ list.add(list.get(size - 1) + list.get(size - 2)); } else if(&amp;#34;D&amp;#34;.equals(s)){ list.add(list.get(size - 1) &amp;lt;&amp;lt; 1); } else{ list.add(Integer.parseInt(s)); } } return list.stream().reduce(Integer::sum).orElse(0); } } 3.22-2038. 如果相邻两个颜色均相同则删除当前颜色 难度：中等
 脑筋急转弯
 class Solution { public boolean winnerOfGame(String colors) { char[] cs = colors.</description>
    </item>
    
  </channel>
</rss>

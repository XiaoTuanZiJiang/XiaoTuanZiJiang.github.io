<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LeetCode on XiaoTuanZiJiang</title>
    <link>https://xiaotuanzijiang.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on XiaoTuanZiJiang</description>
    <image>
      <url>https://xiaotuanzijiang.github.io/papermod-cover.png</url>
      <link>https://xiaotuanzijiang.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 19 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaotuanzijiang.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode</title>
      <link>https://xiaotuanzijiang.github.io/posts/leetcode/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xiaotuanzijiang.github.io/posts/leetcode/</guid>
      <description>LeetCode_每日一题 2.2-917. 仅仅反转字母 难度：简单
 双指针
 class Solution { public String reverseOnlyLetters(String s) { char[] cs = s.toCharArray(); int l = 0, r = cs.length - 1; while(l &amp;lt; r){ if(Character.isLetter(cs[l])){ if(Character.isLetter(cs[r])){ char tmp = cs[l]; cs[l++] = cs[r]; cs[r--] = tmp; } else{ r--; } }else{ l++; } } return String.valueOf(cs); } } 2.20-717. 1比特与2比特字符 难度：简单
 模拟
 class Solution { public boolean isOneBitCharacter(int[] bits) { int n = bits.</description>
    </item>
    
  </channel>
</rss>
